<HEAD>
<TITLE> PI: implementation</TITLE>
</HEAD>
<BODY bgcolor="#ffffff">
<A HREF="../pi.html"><IMG SRC="../../Icones/back.xbm"> </A> Retour
<A HREF="plan.html"><IMG SRC="../../Icones/plan.xbm"> </A>Plan
<A HREF="../../index.html"><IMG SRC="../../Icones/home.gif"> </A> Home Andr&eacute; Brouty
<BR>
<a href="http://www.enst-bretagne.fr/"><IMG SRC="../../Images/ABlogo.gif" border=0></a>
<CENTER>
<H2>Impl&eacute;mentation d'un algorithme simple.</H2>
</CENTER>
<P>
La formule choisie est classique<BR>
<BLOCKQUOTE>
<b>
 PI = 16arctg(1/5) - 4arctg(1/239))
</b>
</BLOCKQUOTE>
 il convient de calculer les arcs tangentes. Ceux-ci se calculent a l'aide
de la  s&eacute;rie de Taylor bien connue de terme g&eacute;n&eacute;rale:
<BLOCKQUOTE>
<b>
Ui(X)=(-1)^i/((2*i+1)*X^(2*i+1))
</b>
</BLOCKQUOTE>
qui elle-m&ecirc;me s'obtient pas r&eacute;curence suivant les formules:
<BLOCKQUOTE>
<b>
V0   = 1/X <BR>
Vn+1 = [(-1)*(2*n+1)/((2*n+3)*X*X)]*Vn
</b>
</BLOCKQUOTE>
<P>
La difficult&eacute; de l'impl&eacute;mentation de ces formules vient qu'il faut
faire les calculs en multipr&eacute;cision. On aura besoin de faire des
additions et des divisions, &eacute;ventuellement des multiplications.
<P>
Les additions en multipr&eacute;cision ne posent pas de probl&egrave;me
particulier, car la somme de deux nombres de p et q chiffres est un nombre
d'au plus max(p,q) + 1 chiffres. Par contre pour la multiplication il en va autrement
car le produit de deux nombres de p et q chiffres donne un nombre de pq
chiffres et la complexit&eacute; de l'algorithme n'est plus lin&eacute;aire.
Comme on a d&eacute;cid&eacute; de faire simple on ne multipliera qu'un
grand nombre par un petit, le petit tenant dans un mot m&eacute;moire de la
machine o&ugrave; se fera le calcul. De m&ecirc;me pour la division. Ce
choix a l'avantage de la simplicit&eacute; et de la performance mais va imposer
des limites au nombre de d&eacute;cimales que l'on pourra calculer.
On va donc repr&eacute;senter un grand nombre par un tableau d'entiers, chacun
ayant une repr&eacute;sentation interne sur la machine de b bits. Par exemple
un tableau de cent entiers permet de repr&eacute;senter un nombre sur 100b bits.
En th&eacute;orie seulement car de nouvelles contraintes vont se poser. On sera
donc amen&eacute; &agrave; multiplier un nombre sur 100b bits par un nombre
sur b bits
en multipliant le nombre de b bits par chaque case du tableau. Le probl&egrave;me
est qu'en faisant cette op&eacute;ration il ne faut pas obtenir un nombre
sup&eacute;rieur &agrave; b bits qu'on ne saura pas stocker. Le nombre plac&eacute;
dans chaque case du tableau ne devra pas d&eacute;passer une valeur maximale
afin d'&eacute;viter ce probl&egrave;me. Evaluons la valeur maximale autoris&eacute;e.
<P>
Examinons le cas de la multiplication:
<P>
On fait comme &agrave; l'&eacute;cole primaire mais sur chaque case du tableau.
La case du tableau repr&eacute;sentant un chiffre sur b bits, dans une base
dont la valeur sera not&eacute;e <b>BASE</b>. Chaque case du tableau C est inf&eacute;rieure
&agrave; BASE
<BLOCKQUOTE>
<b>
C[i] <= BASE - 1<BR>
C[i-1] = C[i]*N + R </b> (R la retenue de la multiplication de la case pr&eacute;c&eacute;dente).<BR>
<b>
R = C[i+1]*N/BASE</b>  donc <BR>
<b>
R <= N*(BASE - 1)/BASE</b> et ainsi<b> R < N</b> donc<BR>
<b>
C[i]*N + R < N*(BASE - 1) + N <= 2^b - 1
</b>
</BLOCKQUOTE>
On obtient donc la relation:
<BLOCKQUOTE>
<b>
N <= (2^b - 1)/BASE	(1)
</b>
</BLOCKQUOTE>
Il faudra pour la multiplication choisir l'entier N v&eacute;rifiant cette
contrainte.
<P>
Examinons le cas de la division:
<P>
De m&ecirc;me on divisera un grand nombre repr&eacute;sent&eacute; par un tableau
par un nombre ordinaire N. Alors comme &agrave; l'&eacute;cole primaire on a
<BLOCKQUOTE>
<b>
C[i] = q*N + R</b> ( R le reste, R < N)
</BLOCKQUOTE>
 puis on abaisse la tranche suivante et on obtient
<BLOCKQUOTE>
<b>
R*BASE + C[i+1]</b> &agrave; diviser par N. Or<BR>
<b>
R <= N - 1 et C[i+1] < (N - 1)*BASE + BASE</b> d'o&ugrave;:<BR>
<b>
 N*BASE < 2^b - 1 <BR> N < (2^b - 1)/BASE
</b>
</BLOCKQUOTE>
on retrouve la m&ecirc;me in&eacute;galit&eacute; que pour la multiplication.
<P>
le nombre de bits b &eacute;tant fix&eacute; par le type de machine, il nous reste
&agrave; choisir la BASE de num&eacute;ration qu'on a int&eacute;ret &agrave;
prendre la plus grande possible afin d'avoir le moins de calculs &agrave; faire.
Plus cette valeur de BASE est grande plus le nombre N sera petit.
<P>
La valeur de BASE &eacute;tant choisie, il nous faut d&eacute;terminer combien
de d&eacute;cimales on peut calculer avec ces contraintes.
<P>
Un nombre X > 1 &eacute;tant donn&eacute;, le nombre de z&eacute;ros apr&egrave;s
la virgule de la repr&eacute;sentation en d&eacute;cimale de 1/X est
donn&eacute; par E[log(X)] si X n'est pas une puissance de 10 et par log(X) - 1
sinon, le log &eacute;tant en base 10.<BR>
Cette remarque est importante car le calcul des d&eacute;cimales de PI
s'arr&ecirc;tera quand toutes les cases du tableau repr&eacute;sentant ces
d&eacute;cimales seront nulles. <BR>
Compte tenues des contraintes de la formule (1) combien de d&eacute;cimales
pourra-t-on obtenir de chaque arctg(1/X) ? Autrement dit combien aura-t-on de
z&eacute;ros pour le terme de la s&eacute;rie
<BLOCKQUOTE>
<b>
Ui(X)=(-1)^i/((2*i+1)*X^(2*i+1))
</b>
</BLOCKQUOTE>
avec l'indice i maximal v&eacute;rifiant (1) ? Le nombre de z&eacute;ro de
Ui(X) est donn&eacute; par
<BLOCKQUOTE>
<b>
E[log(2*i+1) + (2*i+1)*log(X)];
</b>
</BLOCKQUOTE>
X peut valoir, 5 ou 239 pour la formule de Machin. Les tableaux ci-dessous
donnent les r&eacute;sultats pour les diff&eacute;rentes valeurs de b et de BASE.
<UL>
<LI> <H4> Les machines &agrave; mots de 32 bits</H4>
</UL>
Nous avons choisi d'utiliser des entiers sign&eacute;s, donc notre mot fait
31 bits et la relation (1) nous impose:
<BLOCKQUOTE>
N < 2147483647/BASE
</BLOCKQUOTE>
<table border>
<tr><th colspan = 3> BASE ET INDICES</th><th colspan = 3>DECIMALES ATTEINTES POUR arctg(1/X) </th></tr>
<tr><th>BASE</th><th> N MAX </th><th> i=(N-3)/2</th><th>X=5</th><th>X=8</th><th>X=239</th></tr>
<tr><td>1 000 000</td><td>2147</td><td>1072</td><td>1502</td><td>1940</td><td>5104</td></tr>
<tr><td>100 000</td><td>21474</td><td>10735</td><td>15012</td><td>19395</td><td>51070</td></tr>
<tr><td>10 000</td><td>214748</td><td>107372</td><td>150106</td><td>193940</td><td>510756</td></tr>
</table>
<UL>
<LI> <H4> Les machines &agrave; mots de 64 bits</H4>
</UL>
Nous avons choisi d'utiliser des entiers sign&eacute;s, donc notre mot fait
63 bits et la relation (1) nous impose:
<BLOCKQUOTE>
N < 9223372036854775807/BASE
</BLOCKQUOTE>
<table border>
<tr><th colspan = 3> BASE ET INDICES</th><th colspan = 3>DECIMALES ATTEINTES POUR arctg(1/X) </th></tr>
<tr><th>BASE</th><th> N MAX </th><th> i=(N-3)/2</th><th>X=5</th><th>X=8</th><th>X=239</th></tr>
<tr><td>10^15</td><td>9 223</td><td>4 610</td><td>6 449</td><td>8 331</td><td>21 935</td></tr>
<tr><td>10^14</td><td>92 233</td><td>46 115</td><td>64 471</td><td>83 297</td><td>219 366</td></tr>
<tr><td>10^13</td><td>922 337</td><td>461 167</td><td>644 690</td><td>832 957</td><td>2 193 685</td></tr>
</table>
<P>
On est donc amen&eacute; &agrave; changer de base suivant le nombre de
d&eacute;cimales d&eacute;sir&eacute;es, ce qui conduit &agrave; une baisse de
performance pour les grands calculs.
<UL>
<LI> <H4> Performances</H4>
</UL>
ce programme a les performances suivantes:
<P>
<table border>
<tr><th> </th><th>SUR SUN SPARC 10, 32 BITS</th><th>SUR DEC ALPHA OSF, 64 BITS</th></tr>
<tr><th>DECIMALES</th><th>TEMPS</th><th>TEMPS</th></tr>
<tr><td>1 500</td><td align = center>1.8 s</td><td align = center>0.5s</td></tr>
<tr><td>10 000</td><td align = center>1mn 32s </td><td align = center>27.3s</td></tr>
<tr><td>500 000</td><td align = center> - </td><td align = center>19h 40mn</td></tr>
</table>
<P>
Le temps de calcul pour 500 000 d&eacute;cimales sur ce type de
machine n'est pas tr&egrave;s bon.
<p>
Les machines &eacute;voluant tr&egrave;s vite on <a
href="../../Info/bench-pi.html"><b>trouvera ici</b></a> les temps de
calcul sur les diverses machines du march&eacute;s permettant ainsi de
suivre l'&eacute;volution de leur performance.
<HR>
<A HREF="../pi.html"><IMG SRC="../../Icones/back.xbm"> </A> Retour
<A HREF="plan.html"><IMG SRC="../../Icones/plan.xbm"> </A>Plan
<A HREF="../../index.html"><IMG SRC="../../Icones/home.gif"> </A> Home Andr&eacute; Brouty
</BODY>
